Price cruncher for EVEonline market data for Aideron Robotics

Goals:
1) Read in RAW MATERIAL price data from an external database (eve-central, evemarketeer, etc) [COMPLETE]
2) Read in price data from EVE API journals.  
  a) For "real" RAW MATERIALS costs
  b) For "real" FINAL PRODUCTS costs
3) Crunch RAW MATERIAL costs into price-to-build data [IN PROGRESS]
  a) Read in RAW MATERIAL cost sheet [COMPLETE]
  b) Crunch SUB COMPONENT prices into local hash [COMPLETE]
  c) Process material requirements and output price data
4) Download price data for FINAL PRODUCTS from an external database (eve-central, evemarketeer, etc)
5) Create a wrapper that can be run periodically to generate reports for graphing
6) Crunch other data into central XML's for easy utilization elsewhere (googledoc, website, etc)
7) Build shopping-list/kit-list using build requirements and AIDER assignments

DATA:
1) price.xml: Output from priceparse.pl and JournalCrunch.pl.  Contains several pricepoints to calculate with
2) component.xml: Contains sub-component build requirements.  Used by costcrunch.pl to price FINAL PRODUCTS
3) manufacture.xml: Contains FINAL PRODUCT build requirements.  Used by costcrunch.pl to build initial price list
4) report.xml (not started): Output from costcrunch.pl.  Contains actual build costs as per line args
5) t1.xml: Contains build materials for T1.  
6) producers.xml: Contains builder char# and assigned goods.  Used to calculate individual kits
7) kits.xml: using producers.xml and manufacture.xml contains kit requirements.  Also has full shopping list

PROGRAMS:
1) priceparse.pl: Queries external database for price information and builds a raw-materials cost sheet
  -INPUT: selected database (eve-central, evemarketeer)
  -OUTPUT: price.xml
2) costcrunch.pl: uses local DB's for material requirements and outputs the pure cost for building materials
  -INPUT: price.xml, t1.xml, component.xml, manufacture.xml
  -OUTPUT: report_<period length><period number>.xml
    EX: report_W14.xml <--week 14's report
3) JournalCrunch.pl: processes EVE-O API data to generate "real" prices for goods.  Adds <real></real> tags to items
  -INPUT: report.xml, price.xml
  -OUTPUT: report.xml, price.xml
  [NOT STARTED YET]
4) KitCrunch.pl: builds kit-list for each inventor.
  -INPUT: producers.xml, manufacture.xml
  -OUTPUT: kits.xml
  
NOTES:
Perl uses XML::Simple and XML::Writer.
	-Added /lib with packages
	-Recommended usage
		-Strawberry Perl (WIN): cpan <package>